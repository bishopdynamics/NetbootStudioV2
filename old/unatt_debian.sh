#!/bin/bash
# Netboot Studio - generate unattend.cfg for debian

#    This file is part of Netboot Studio, a system for managing netboot clients
#    Copyright (C) 2019 James Bishop (jamesbishop2006@gmail.com)

# best heredoc explanation ever: https://stackoverflow.com/questions/1167746/how-to-assign-a-heredoc-value-to-a-variable-in-bash


######################################################### provided by python side
FINAL_FILE='%s'

######################################################### end provided by python side

# static vars
HEADER_COMMENT='Autogenerated by Netboot Studio'

if [ -f "${FINAL_FILE}" ]; then
    echo "target file already exists, aborting"
    echo "target file: ${FINAL_FILE}"
    exit 1
fi

touch "${FINAL_FILE}" || {
    echo "failed to touch ${FINAL_FILE}, aborting"
    exit 1
}

# Local vars
TEMP_FILE=$(mktemp)

# list of bool vars that need to actually be 1 or 0
BOOL_INT_VARS=''

# List of important vars
ALL_IMPORTANT_VARS='FINAL_FILE
HEADER_COMMENT
'

# check important vars
function checkVars {
    for VAR in $ALL_IMPORTANT_VARS; do
      if [ -z "${!VAR}" ]; then
        echo "var [$VAR] has unacceptable value: ${!VAR}"
        exit 0
      fi
      for INT_VAR in $BOOL_INT_VARS; do
        # if this varname is in list of bool_int_vars then convert its value to 0 or 1
        if [ "$VAR" = "$INT_VAR" ]; then
          if [ "${!VAR}" = "true" ] || [ "${!VAR}" = "True" ]; then
            eval "${VAR}=1"
          else
            eval "${VAR}=0"
          fi
          echo "converted $VAR to boolint value: ${!VAR}"
        fi
      done
    done
    echo "Variable check successfull"
}

# for debugging, print all important vars and their values
function showVars {
  for VAR in $ALL_IMPORTANT_VARS; do
    echo "${VAR}=\\"${!VAR}\\""
  done
}

checkVars
# showVars

######################################################### Generate File Starts Here #########################################################
#############################################################################################################################################



######################################################### End Generate File #################################################################
#############################################################################################################################################

#########################################################   file is done, post work   #########################################################
cp "${TEMP_FILE}" "${FINAL_FILE}"
#########################################################   end post work    #########################################################


echo "done. check out: ${FINAL_FILE}"