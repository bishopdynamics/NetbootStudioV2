#!/usr/bin/env bash
# Netboot Studio - generate docker-compose.yml
# shellcheck disable=SC1091

source ./bin/nscommon.bashlib || {
  echo "failed to source nscommon.bashlib"
  exit 1
}


source "local_environment.sh" || {
  echo "failed to source local_environment.sh"
  exit 1
}


takenote "generating docker-compose.yml"
cat << EOF_DOCKER_COMPOSE > docker-compose.yml
---
version: '3.6'

# auto-generated by generate_docker_compose.sh

# full stack of services
# this needs to run on host network with kernel capability NET_ADMIN, so it will not currently run in Docker Swarm.

services:
  NS-API:
    image: bishopdynamics/netbootstudio:latest
    restart: unless-stopped
    # Need to run privileged so that tasks can use chroot
    privileged: true
    environment:
      - PUID=${SERVICE_UID}
      - PGID=${SERVICE_GID}
    ports:
      - "8083:8083"
      - "8081:8081"
    volumes:
      - ${NS_CONFIGDIR}:/opt/NetbootStudio
      - /etc/timezone:/etc/timezone:ro
    command: >
      /bin/bash -c "echo 'Delaying startup to wait for broker and database';sleep 10;python3 NS_Service_API.py -m prod -c /opt/NetbootStudio;"

  NS-FileWatcher:
    image: bishopdynamics/netbootstudio:latest
    restart: unless-stopped
    environment:
      - PUID=${SERVICE_UID}
      - PGID=${SERVICE_GID}
    volumes:
      - ${NS_CONFIGDIR}:/opt/NetbootStudio:ro
      - /etc/timezone:/etc/timezone:ro
    command: >
      /bin/bash -c "echo 'Delaying startup to wait for broker and database';sleep 10;python3 NS_Service_FileWatcher.py -m prod -c /opt/NetbootStudio;"

  NS-Uploader:
    image: bishopdynamics/netbootstudio:latest
    restart: unless-stopped
    environment:
      - PUID=${SERVICE_UID}
      - PGID=${SERVICE_GID}
    ports:
      - "8084:8084"
    volumes:
      - ${NS_CONFIGDIR}:/opt/NetbootStudio
      - /etc/timezone:/etc/timezone:ro
    command: >
      /bin/bash -c "echo 'Delaying startup to wait for broker and database';sleep 10;python3 NS_Service_Uploader.py -m prod -c /opt/NetbootStudio;"

  NS-Stage:
    image: bishopdynamics/netbootstudio:latest
    restart: unless-stopped
    environment:
      - PUID=${SERVICE_UID}
      - PGID=${SERVICE_GID}
    ports:
      - "8082:8082"
    # need network_mode: host or mac address lookup wont work correctly
    network_mode: host
    volumes:
      - ${NS_CONFIGDIR}:/opt/NetbootStudio:ro
      - /etc/timezone:/etc/timezone:ro
    command: >
      /bin/bash -c "echo 'Delaying startup to wait for broker and database';sleep 10;python3 NS_Service_Stage.py -m prod -c /opt/NetbootStudio;"

  NS-TFTP:
    image: bishopdynamics/netbootstudio:latest
    restart: unless-stopped
    ports:
      - "69:69/udp"
    # need network_mode: host for dhcp sniffer to work correctly
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_BIND_SERVICE
      - NET_RAW
    volumes:
      - ${NS_CONFIGDIR}:/opt/NetbootStudio
      - /etc/timezone:/etc/timezone:ro
    command: >
      /bin/bash -c "echo 'Delaying startup to wait for broker and database';sleep 10;python3 NS_Service_TFTP.py -m prod -c /opt/NetbootStudio;"

  NS-WebUI:
    image: bishopdynamics/netbootstudio:latest
    restart: unless-stopped
    environment:
      - PUID=${SERVICE_UID}
      - PGID=${SERVICE_GID}
    ports:
      - "443:443"
      - "80:80"
    cap_add:
      - NET_ADMIN
      - NET_BIND_SERVICE
    volumes:
      - ${NS_CONFIGDIR}:/opt/NetbootStudio:ro
      - /etc/timezone:/etc/timezone:ro
    command: >
      /bin/bash -c "python3 NS_Service_WebUI.py -m prod -c /opt/NetbootStudio;"

  NS-Database:
    image: mariadb
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --innodb-file-per-table=1 --skip-innodb-read-only-compressed
    environment:
      - PUID=${SERVICE_UID}
      - PGID=${SERVICE_GID}
    ports:
      - "3306:3306"
    volumes:
      - ${LOCAL_DIR}/database:/var/lib/mysql
      - /etc/timezone:/etc/timezone:ro
      - ${NS_CONFIGDIR}/certs:/opt/NetbootStudio/certs:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=netbootstudio
      - MYSQL_USER=${SERVICE_USER}

# Note: depends on ${LOCAL_DIR}/broker/config/mosquitto.conf, which is generated by first_time_setup.sh
  NS-Broker:
    image: eclipse-mosquitto:latest
    restart: unless-stopped
    ports:
      - "8883:8883"
      - "8884:8884"
    volumes:
      - ${LOCAL_DIR}/broker:/mosquitto
      - /etc/timezone:/etc/timezone:ro
      - ${NS_CONFIGDIR}/certs:/certs:ro

  NS-Samba:
    image: dperson/samba
    restart: unless-stopped
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139/tcp"
      - "445:445/tcp"
    cap_add:
      - NET_ADMIN
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp
    stdin_open: true
    tty: true
    volumes:
      - ${NS_CONFIGDIR}:/opt/NetbootStudio:ro
      - /etc/timezone:/etc/timezone:ro
    command: '-s "boot_images;/opt/NetbootStudio/boot_images"'

  NS-code-server:
    image: bishopdynamics/code-server:latest
    restart: unless-stopped
    environment:
      - PUID=${SERVICE_UID}
      - PGID=${SERVICE_GID}
      - DEFAULT_WORKSPACE=/workspace
      - PASSWORD=${WEBUI_ADMIN_PASSWORD}
      - SSL_CERT=/server_cert.pem
      - SSL_KEY=/server_key.key
    ports:
      - "8443:8443/tcp"
    volumes:
      - ${LOCAL_DIR}/code-server:/config
      - ${NS_CONFIGDIR}/certs/server_cert.pem:/server_cert.pem:ro
      - ${NS_CONFIGDIR}/certs/server_key.key:/server_key.key:ro
      - /etc/timezone:/etc/timezone:ro
      - ${NS_CONFIGDIR}:/workspace
    
    

EOF_DOCKER_COMPOSE
